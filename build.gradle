apply plugin: 'idea'
//and standard one
apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'org.checkerframework:checker:2.1.12'
    extraLibs group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    configurations.compile.extendsFrom(configurations.extraLibs)
    testCompile 'junit:junit:4.12'
    compile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes(
                'Main-Class'        : 'com.marin.mauricio.Main',
                'Built-By'          : "Mauricio Marin Jimenez",
                'Build-Timestamp'   : new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                //'Build-Revision'  : versioning.info.commit,
                'Created-By'        : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'         : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'          : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'res'
        }
    }
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/coverageJacocoReportDir")
}

test {
    useJUnit()
    maxHeapSize = '1G'
}

test.finalizedBy jacocoTestReport